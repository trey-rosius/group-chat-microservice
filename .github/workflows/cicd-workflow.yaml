name: Deploy the CDK Infrastructure and Build the Catalyst Service Images

on:
  push:
    branches:
        - main

jobs:
  run-diagrid-cmd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3

      - name: Install the CDK Dependency
        run: |
          npm install -g aws-cdk
      # Install Diagrid CLI
      - name: Install Diagrid CLI
        run: |
          # Download the latest Diagrid CLI from GitHub or direct source
          curl -o- https://downloads.diagrid.io/cli/install.sh | bash
          sudo mv ./diagrid /usr/local/bin
      # Log into diagrid
      - name: Log Into Diagrid
        run: |
          diagrid login --api-key ${{secrets.DIAGRID_API_KEY}}
      # Diagrid Version
      - name: Diagrid Version
        run: |
          diagrid version
      # Assign Diagrid Project
      - name: Assign Diagrid Project
        run: |
          diagrid project use group-chat-microservice --api-key ${{secrets.DIAGRID_API_KEY}}

      #Retrieve apiTokens for all project services
      - name: Retrieve apiToken for each service
        id: create_app_token_json
        run: |
          # Initialize an empty array for the final output
          json_array="[]"
          for service in ./services/*/ ; do
            service_name=$(basename "$service")
            # Fetch the Diagrid app identity information in JSON format
            # Error handling if diagrid appid get command fails
            if ! diagrid_output=$(diagrid appid get $service_name -o json 2>/dev/null); then
              echo "Error: Failed to retrieve Diagrid app identity for $service_name"
              continue  # Skip this service and move to the next one
            fi
            # Extract the apiToken using jq from the Diagrid output
            api_token=$(echo $diagrid_output | jq -r '.status.apiToken')
          
            # Check if apiToken is null or empty
            if [ -z "$api_token" ] || [ "$api_token" == "null" ]; then
              echo "Error: No valid apiToken found for $service_name"
              continue  # Skip this service and move to the next one
            fi
            
            echo "API Token for $service_name: $api_token"
          
            # Create a JSON object with the service and apiToken
            json_object=$(jq -n --arg service "$service_name" --arg apiToken "$api_token" \
                          '{service: $service, apiToken: $apiToken}')
          
            # Add the JSON object to the array
            json_array=$(echo $json_array | jq --argjson obj "$json_object" '. += [$obj]')
          done
          
          # Save the JSON array to a file
          echo $json_array | jq . > cdk-infra/service_tokens.json
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "service_tokens<<$EOF" >> $GITHUB_OUTPUT
          echo "$json_array" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT
          
          cat cdk-infra/service_tokens.json

      - name: Upload service_tokens.json
        uses: actions/upload-artifact@v4
        with:
          name: service_tokens
          path: cdk-infra/service_tokens.json

name: Deploy the CDK Infrastructure and Build the Catalyst Service Images

on:
  push:
    branches:
      - main

jobs:

  deploy-graphql-cdk-stack:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Install the CDK Dependency
        run: |
          npm install -g aws-cdk
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@master
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Retrieving the DNS for the services and updating the appIDs
        run: |
          # Initialize an empty array
          json_array="[]"
          for service in ./services/*/ ; do
            service_name=$(basename "$service")
            alb_name=$(basename "$service")-ALB
            alb_dns=$(aws elbv2 describe-load-balancers --names $alb_name --query "LoadBalancers[0].DNSName" --output text)
            echo "ALB DNS: $alb_dns"
            echo "Service name is : $service_name"

            EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
            echo "alb_dns<<$EOF" >> $GITHUB_OUTPUT
            echo "$alb_dns" >> $GITHUB_OUTPUT
            echo "$EOF" >> $GITHUB_OUTPUT


            # Create a JSON object with the service and ALB DNS
            json_object=$(jq -n --arg service "$service_name" --arg alb_dns "$alb_dns" \
                          '{service: $service, url: $alb_dns}')

            # Add the JSON object to the array
            json_array=$(echo $json_array | jq --argjson obj "$json_object" '. += [$obj]')



          done
          # Save the JSON array to a file
          echo $json_array | jq . > cdk-graphql-stack/alb_services.json

          # Output the JSON array
          echo "JSON Array:"
          cat cdk-graphql-stack/alb_services.json
      - name: Synthesize CdkGroupChatMicroserviceStack
        run: |
          json_array=$(cat cdk-graphql-stack/alb_services.json)
          # Save the JSON array to a file
          echo $json_array | jq . > tokens.json
          echo "Final JSON Array:"
          cat tokens.json
          cdk synth -c configfile=tokens.json
        working-directory: ./cdk-graphql-stack
      - name: Bootstrap CDK Stack
        run: |
          json_array=$(cat cdk-graphql-stack/alb_services.json)
          # Save the JSON array to a file
          echo $json_array | jq . > service_tokens.json
          echo "Final JSON Array:"
          cat service_tokens.json
          cdk bootstrap -c configfile=service_tokens.json
        working-directory: ./cdk-graphql-stack

      - name: Deploy CdkGroupChatMicroserviceStack to AWS
        run: |
          json_array=$(cat service_tokens.json)
          # Save the JSON array to a file
          echo $json_array | jq . > service_tokens.json
          echo "Final JSON Array:"
          cat service_tokens.json
          cdk deploy CdkGroupChatMicroserviceStack --require-approval=never -c configfile=service_tokens.json
        working-directory: ./cdk-graphql-stack
